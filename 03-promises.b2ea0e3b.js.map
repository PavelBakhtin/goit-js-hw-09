{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SACMC,EAAaC,SAASC,cAAc,qBACpCC,EAAYF,SAASC,cAAc,oBACnCE,EAAcH,SAASC,cAAc,sBAI3C,SAASG,EAAcC,EAAUC,GAEjB,IAAIC,SAAQ,SAACC,EAASC,GAEnCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAACK,SAAAR,EAASS,MAAAR,IAElBG,EAAO,CAACI,SAAAR,EAASS,MAAAR,MAEnBA,MAIKS,MAAK,SAAAC,G,IAAEH,EAAQG,EAARH,SAASC,EAAKE,EAALF,M,OAAWjB,EAAAoB,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,UAAMM,OAAM,SAAAJ,G,IAAEH,EAAQG,EAARH,SAASC,EAAKE,EAALF,M,OAAWjB,EAAAoB,OAAOI,QAAQ,sBAAqCF,OAAfN,EAAS,QAAYM,OAANL,EAAM,UAlB5Kd,SAASC,cAAc,UAC/BqB,iBAAiB,SAqBzB,SAA0BC,GACxBA,EAAEC,iBAGD,IAFD,IAAIV,EAAQf,EAAW0B,MACjBC,EAAOxB,EAAUuB,MACdE,EAAI,EAAGA,EAAIxB,EAAYsB,MAAOE,GAAG,EAAG,CAC3C,IAAId,EAAWc,EAAI,EAChBA,EAAE,IACHb,EAAQc,SAASF,GAAQE,SAASd,IAGlCV,EAAcS,EAAUC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio'\nconst delayInput = document.querySelector('input[name=delay]')\nconst stepInput = document.querySelector('input[name=step]')\nconst amountInput = document.querySelector('input[name=amount]')\nconst createBtn = document.querySelector('button')\ncreateBtn.addEventListener('click', promiseGenerator)\n\nfunction createPromise(position, delay) {\n  \nconst promise = new Promise((resolve, reject) => {\n  \n   setTimeout(()=>{\n     const shouldResolve = Math.random() > 0.3;\n     if (shouldResolve) {\n       resolve({position,delay})\n     } else {\n       reject({position,delay})\n     }\n   },delay)\n   \n  })\n   \n  promise.then(({position,delay}) => Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)).catch(({position,delay}) => Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`))\n \n }\n\nfunction promiseGenerator(e) {\n  e.preventDefault()\n  let delay = delayInput.value\n  const step = stepInput.value\n   for(let i = 0; i < amountInput.value; i+=1 ){\n    let position = i + 1\n    if(i>0) {\n      delay = parseInt(step) + parseInt(delay)\n    }\n    \n      createPromise(position, delay)\n    }\n  \n  }\n\n\n\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$delayInput","document","querySelector","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","setTimeout","Math","random","position","delay","then","param","Notify","success","concat","catch","failure","addEventListener","e","preventDefault","value","step","i","parseInt"],"version":3,"file":"03-promises.b2ea0e3b.js.map"}